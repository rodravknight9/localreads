@page "/myserver"
@inject IHttpRequest HttpRequest
@inject NavigationManager Navigation

<MudGrid Class="px-4" Style="min-height: 600px;">
    <!-- Left: User List (40%) -->
    <MudItem xs="12" md="5" lg="4" Style="color: white">
        <MudPaper Class="pa-0" Style="height:100%; min-height:500px; background: white;">
            <MudButton Variant="Variant.Outlined" StartIcon="@Icons.Material.Filled.ArrowBack" Class="ml-6 mt-4">Back</MudButton>
            <MudText Typo="Typo.body1" Class="mb-4 pt-6 px-6">Server Members</MudText>
            <div class="user-list-scroll px-4 pb-4">
                <MudList T="UserResponse" Dense="false">
                    @if (Users.Count == 0)
                    {
                        <MudText Typo="Typo.body1" Color="Color.Secondary">No users found.</MudText>
                    }
                    else
                    {
                        @foreach (var user in Users)
                        {
                            <MudListItem Style="cursor:pointer; border-bottom: 2px solid #eee" @onclick="() => GoToUser(user.Id)">
                                <MudElement Class="d-flex flex-row ma-0 pa-0">
                                    <MudAvatar Size="Size.Medium" Color="Color.Tertiary" Style="background-color: #70b9ff; padding: 15px; margin-right: 2rem">
                                        @user.Name?.FirstOrDefault()</MudAvatar>
                                    <MudElement>
                                        <MudText Typo="Typo.subtitle1" Class="fw-bold" Style="color: var(--mud-palette-primary-dark);">@user.Name</MudText>
                                        <MudText Typo="Typo.body2" Color="Color.Secondary">@user.UserName</MudText>
                                        <MudText Typo="Typo.body2" Color="Color.Secondary">@user.Location</MudText>
                                        <MudText Typo="Typo.body2" Color="Color.Info">@user.FavoriteBooksCount books</MudText>
                                        <MudText Typo="Typo.caption" Color="Color.Primary" Class="mt-1">
                                            Currently reading: <b>@user.CurrentlyReading</b>
                                        </MudText>
                                    </MudElement>
                                </MudElement>

                            </MudListItem>
                        }
                    }
                </MudList>
            </div>
        </MudPaper>
    </MudItem>

    <!-- Right: Placeholder for future content (60%) -->
    <MudItem xs="12" md="7" lg="8">
        <MudPaper Class="pa-6 d-flex flex-column align-items-center justify-center" Style="height:100%; min-height:500px;">
            <MudText Typo="Typo.h6" Color="Color.Tertiary" Class="mb-2">
                Future content area
            </MudText>
            <MudText Typo="Typo.body2" Color="Color.Secondary" Align="Align.Center">
                This space is reserved for server statistics, most read books, or other features.
            </MudText>
        </MudPaper>
    </MudItem>
</MudGrid>

<style>
    .user-list-scroll {
        max-height: 520px;
        overflow-y: auto;
        scrollbar-width: thin;
        scrollbar-color: var(--mud-palette-primary) var(--mud-palette-background-grey);
    }
    .user-list-scroll::-webkit-scrollbar {
        width: 8px;
        background: var(--mud-palette-background-grey);
    }
    .user-list-scroll::-webkit-scrollbar-thumb {
        background: var(--mud-palette-primary-light);
        border-radius: 4px;
    }
</style>

@code {
    private List<UserResponse> Users = new List<UserResponse>();

    protected override async Task OnInitializedAsync()
    {
        Users = (await HttpRequest.Get<List<UserResponse>>($"/users")).Content;
    }

    private void GoToUser(int id)
    {
        Navigation.NavigateTo($"/profile/{id}");
    }
}
