@page "/register"
@using LocalReads.Services
@using LocalReads.Shared.DataTransfer.User
@using MudBlazor
@inject IHttpRequest HttpRequest
@inject NavigationManager Navigation
@inject IAuthService AuthService
@inject IDialogService DialogService


<MudContainer>
    <MudItem xs="12" sm="7">
        <MudPaper Class="pa-4">
            <MudText Typo="Typo.h4">Register</MudText>  
            <MudForm Model="@RegisterUser" Style="margin-bottom: 1rem">
                <MudTextField T="string" Label="Username" @bind-Value="@RegisterUser.UserName"/>
                <MudTextField T="string" Label="Name" @bind-Value="@RegisterUser.Name"/>
                <MudTextField T="string" Label="Password" @bind-Value="@RegisterUser.Password" InputType="InputType.Password"/>
                <!--<MudTextField T="string" Label="Password" HelperText="Repeat the password" InputType="InputType.Password" />-->
            </MudForm>
            <MudElement>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="HandleRegister">Register</MudButton>
            </MudElement>
        </MudPaper>
    </MudItem>
</MudContainer>

@code {
    public RegisterUser RegisterUser { get; set; } = new RegisterUser();

    protected override async Task OnInitializedAsync()
    {
        if(await AuthService.IsLoggedIn())
            Navigation.NavigateTo("/");
    }

    private async Task HandleRegister()
    {
        var res = await HttpRequest.SimplePost<RegisterUser>(RegisterUser, "/users/register");
        if (res.Success)
        {

            var parameters = new DialogParameters
            {
                { "Title", "Registration" },
                { "Message", "Register Successful" }
            };

            var options = new DialogOptions { CloseButton = true, MaxWidth = MaxWidth.Small };

            var dialog = await DialogService.ShowAsync<GenericDialog>("", parameters, options);
            var result = await dialog.Result;

            if (!result!.Canceled)
            {
                Navigation.NavigateTo("/login");
            }
           
        }
    }
}
