@page "/"
@inject IHttpRequest HttpRequest
@inject AppState AppState
@inject IAuthService AuthService
<MudContainer>
    <MudElement Class="d-flex flex-column" Style="width: 40%">
        <MudText Typo="Typo.body1" Class="mb-4">Currently Reading</MudText>
        @foreach (var fav in _favorites)
        {
            <MudElement Class="d-flex">
                <MudImage Src="@fav.Book.ImageLink" Width="90" Height="130" Class="mr-2"/>
                <MudElement Class="d-flex flex-column">
                    <MudLink 
                        Href="/" 
                        Underline="Underline.Always"
                        Color="Color.Dark"
                        Class="mb-1">@fav.Book.Title</MudLink>
                    <MudText Typo="Typo.body1">by @fav.Book.Authors</MudText>
                    <MudElement Class="mb-1">
                        <MudProgressLinear 
                            Color="Color.Success" 
                            Size="Size.Medium" Value="@fav.Progress" />
                        <MudText Typo="Typo.body2">@fav.Progress %</MudText>
                    </MudElement>
                    <MudButton 
                         Variant="Variant.Outlined" 
                         Size="Size.Small"
                         Color="Color.Secondary">Update Progress</MudButton>
                </MudElement>
            </MudElement>
        }
    </MudElement>
</MudContainer>

@code {
    private List<Favorite> _favorites { get; set; } = [];

    protected override async Task OnInitializedAsync()
    {
        await AuthService.PersistLoggedInUser();
        var userId = AppState.UserState.User.Id;
        _favorites =
            (await HttpRequest.Get<List<Favorite>>($"/favorite/inprogress/{userId}")).Content;
    }

}