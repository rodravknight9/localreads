@page "/profile/edit"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@inject IHttpRequest HttpRequest
@inject AppState State

<MudContainer>
    <MudItem xs="12" sm="7">
        <MudPaper Class="pa-4">
            <MudText Typo="Typo.h4">Edit Profile</MudText>
            <MudForm Model="@User" Style="margin-bottom: 1rem">
                <MudTextField Class="mb-1" T="string" Label="Username" @bind-Value="@User.UserName"/>
                <MudTextField Class="mb-1" T="string" Label="Name" @bind-Value="@User.Name"/>
                <MudDatePicker Class="mb-1" Date="@User.BirthDate" DateChanged="OnBirthdateChange" Label="Birthdate" />
                <MudTextField Class="mb-1" T="string" Label="Location" @bind-Value="@User.Location"/>
                <MudTextField Class="mb-1" T="string" Label="About Me" Lines="3" @bind-Value="@User.PersonalIntroduction"/>
            </MudForm>
            <MudElement>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="HandlUpdate">Save</MudButton>
            </MudElement>
        </MudPaper>
    </MudItem>
</MudContainer>

@code {

    private User User = new User();
    
    protected override async Task OnInitializedAsync()
    {
        var id = State.UserState.User.Id;
        User = (await HttpRequest.Get<User>($"/user/{id}")).Content; //State.UserState.User;
    }

    private async Task HandlUpdate()
    {
        var response = await HttpRequest.SimplePut(User, "/user");
        if (response.Success)
        {
            var options = new DialogOptions { CloseOnEscapeKey = true };

            //return DialogService.ShowAsync<GenericDialog>("Simple Dialog", options);
        }
    }

    private void OnBirthdateChange(DateTime? newDate)
    {
        if(newDate != null)
            User.BirthDate = (DateTime)newDate;
    }

}