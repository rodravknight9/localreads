@page "/profile/edit"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@inject IHttpRequest HttpRequest
@inject AppState State

<MudContainer MaxWidth="MaxWidth.Small" Class="my-8 d-flex justify-center">
    <MudPaper Elevation="4" Class="pa-6 w-100" Style="border-radius: 18px;">
        <MudStack Spacing="2" AlignItems="AlignItems.Center" Class="mb-4">
            <MudIcon Icon="@Icons.Material.Filled.Edit" Size="Size.Large" Color="Color.Primary" />
            <MudText Typo="Typo.h4">Edit Profile</MudText>
            <MudText Typo="Typo.subtitle2" Color="Color.Secondary" Align="Align.Center">
                Update your information below and click Save.
            </MudText>
        </MudStack>
        <MudForm Model="@User" Class="mb-4">
            <MudTextField Class="mb-3" T="string" Label="Username" @bind-Value="@User.UserName" Required="true" For="@(() => User.UserName)" />
            <MudTextField Class="mb-3" T="string" Label="Name" @bind-Value="@User.Name" />
            <MudDatePicker Class="mb-3" Date="@User.BirthDate" DateChanged="OnBirthdateChange" Label="Birthdate" />
            <MudTextField Class="mb-3" T="string" Label="Location" @bind-Value="@User.Location" />
            <MudTextField Class="mb-3" T="string" Label="About Me" Lines="3" @bind-Value="@User.PersonalIntroduction" />
        </MudForm>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="HandlUpdate" FullWidth="true">
            Save Changes
        </MudButton>
    </MudPaper>
</MudContainer>

@code {

    private User User = new User();
    
    protected override async Task OnInitializedAsync()
    {
        var id = State.UserState.User.Id;
        User = (await HttpRequest.Get<User>($"/user/{id}")).Content;
    }

    private async Task HandlUpdate()
    {
        var response = await HttpRequest.SimplePut(User, "/user");
        if (response.Success)
        {
            // Optionally show a success dialog or notification here
        }
    }

    private void OnBirthdateChange(DateTime? newDate)
    {
        if(newDate != null)
            User.BirthDate = (DateTime)newDate;
    }

}